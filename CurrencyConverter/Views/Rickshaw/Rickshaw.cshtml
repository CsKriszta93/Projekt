@model CurrencyConverter.Models.ViewModels.RickshawViewModel
@using Newtonsoft.Json;

<html>
<head runat="server">
    <title>Hello word</title>

    <link type="text/css" rel="stylesheet" href="CSS/graph.css">
    <link type="text/css" rel="stylesheet" href="CSS/css_detail.css">
    <link type="text/css" rel="stylesheet" href="CSS/css_legend.css">
    <link type="text/css" rel="stylesheet" href="CSS/css_lines.css">


    <script src="Scripts/d3.v2.js"></script>
    <script src="Scripts/rickshaw.min.js"></script>
</head>
<body>

    @foreach (var curr in Model.Currencies)
    {
        <div>
            <input type="checkbox" id="@curr" name="feature" onclick="checkbox_click('@curr')"
                   value="@curr" />
            <label for="@curr">@curr</label>
        </div>
    }

    <div id="chart_container">
        <div id="chart"></div>
        <div id="legend_container">
            <div id="smoother" title="Smoothing"></div>
            <div id="legend"></div>
        </div>
        <div id="slider"></div>
    </div>

    <script>
        var all_curr = @Html.Raw(JsonConvert.SerializeObject(Model.currencyGraph));
        var selected_curr = new Array();

        var graph;
		var hoverDetail;
		var legend;
		var shelving;
		var axes;

        function checkbox_click(Id) {
            var chk = document.getElementById(Id);
			var i;
			for (i = 0; i < all_curr.length && all_curr[i].name != Id; i++);

			if(chk.checked)
            {
                selected_curr.push(all_curr[i]);
			}
			else
			{
			  	selected_curr.pop(all_curr[i]);
            }

            redraw_graph();
        }

		function redraw_graph() {
			graph = new Rickshaw.Graph( {
				element: document.getElementById("chart"),
				width: 960,
				height: 1000,
				renderer: 'line',
				series: selected_curr
			} );

			graph.render();

			hoverDetail = new Rickshaw.Graph.HoverDetail( {
				graph: graph
			} );

			legend = new Rickshaw.Graph.Legend( {
				graph: graph,
				element: document.getElementById('legend')

			} );

			shelving = new Rickshaw.Graph.Behavior.Series.Toggle( {
				graph: graph,
				legend: legend
			} );

			axes = new Rickshaw.Graph.Axis.Time( {
				graph: graph
			} );
			axes.render();
		}

    </script>

</body>
</html>
